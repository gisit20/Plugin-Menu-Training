/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bits.bee.plugintraining.ui;

import com.bits.bee.plugintraining.bl.Salesman2;
import com.bits.bee.plugintraining.ui.dlg.DlgSalesman;
import com.bits.bee.ui.UIMgr;
import com.bits.bee.ui.myswing.InternalFrameTrans;
import com.bits.lib.BUtil;
import com.bits.lib.dbswing.BdbState;
import com.bits.lib.security.BAuthMgr;
import com.borland.dx.dataset.DataSet;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import org.openide.util.Exceptions;

/**
 *
 * @author Sigit Sukarman
 */
public class FrmSalesman2 extends InternalFrameTrans implements PropertyChangeListener {

    String OBJID = "PG-TR-TUGAS-03";
    Salesman2 srep = new Salesman2();
    BdbState state = new BdbState();

    /**
     * Creates new form FrmSalesman2
     */

    public FrmSalesman2() {
        initComponents();
        initMaster();
    }

    private void initMaster() {
        jBToolbar1.setState(state);
        jBToolbar1.setObjid(OBJID);
        jBToolbar1.setAuthMgr(BAuthMgr.getDefault());

        state.addPropertyChangeListener("state", this);
        state.setState(BdbState.stNONE);
    }

    private void initPanel(boolean enable) {
        BUtil.setEnabledPanel(jPanel1, enable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBToolbar1 = new com.bits.lib.dbswing.JBToolbar();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        srepid = new com.bits.bee.ui.myswing.BTextIDField();
        srepname = new com.bits.lib.dbswing.JBdbTextField();
        mobile = new com.bits.lib.dbswing.JBdbTextField();
        email = new com.bits.lib.dbswing.JBdbTextField();
        phone = new com.bits.lib.dbswing.JBdbTextField();
        srepname1 = new com.bits.lib.dbswing.JBdbTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        addr = new com.borland.dbswing.JdbTextArea();
        jLabel9 = new javax.swing.JLabel();
        jdbCheckBox1 = new com.borland.dbswing.JdbCheckBox();
        jLabel1 = new javax.swing.JLabel();

        setTitle(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.title")); // NOI18N
        setToolTipText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.toolTipText")); // NOI18N

        jBToolbar1.setEnablePrint(false);
        jBToolbar1.setEnableRefresh(false);
        jBToolbar1.setEnableVoid(false);
        jBToolbar1.setEnabled(false);
        jBToolbar1.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 12)); // NOI18N
        jBToolbar1.addJBToolbarListener(new com.bits.lib.dbswing.JBToolbarListener() {
            public void toolbarNewPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
                jBToolbar1ToolbarNewPerformed(evt);
            }
            public void toolbarOpenPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
                jBToolbar1ToolbarOpenPerformed(evt);
            }
            public void toolbarEditPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
                jBToolbar1ToolbarEditPerformed(evt);
            }
            public void toolbarSavePerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
                jBToolbar1ToolbarSavePerformed(evt);
            }
            public void toolbarCancelPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
                jBToolbar1ToolbarCancelPerformed(evt);
            }
            public void toolbarDeletePerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
                jBToolbar1ToolbarDeletePerformed(evt);
            }
            public void toolbarVoidPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
            }
            public void toolbarPrintPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
            }
            public void toolbarRefreshPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
            }
        });

        jLabel2.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 11)); // NOI18N
        jLabel2.setText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.jLabel2.text")); // NOI18N
        jPanel1.add(jLabel2);

        jLabel3.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 11)); // NOI18N
        jLabel3.setText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.jLabel3.text")); // NOI18N
        jPanel1.add(jLabel3);

        jLabel4.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 11)); // NOI18N
        jLabel4.setText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.jLabel4.text")); // NOI18N
        jPanel1.add(jLabel4);

        jLabel5.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 11)); // NOI18N
        jLabel5.setText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.jLabel5.text")); // NOI18N
        jPanel1.add(jLabel5);

        jLabel6.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 11)); // NOI18N
        jLabel6.setText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.jLabel6.text")); // NOI18N
        jPanel1.add(jLabel6);

        jLabel7.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 11)); // NOI18N
        jLabel7.setText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.jLabel7.text")); // NOI18N
        jPanel1.add(jLabel7);

        jLabel8.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 11)); // NOI18N
        jLabel8.setText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.jLabel8.text")); // NOI18N
        jPanel1.add(jLabel8);

        srepid.setText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.srepid.text")); // NOI18N
        srepid.setColumnName(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.srepid.columnName")); // NOI18N
        srepid.setDataSet(srep.getDataSet());
        jPanel1.add(srepid);

        srepname.setText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.srepname.text")); // NOI18N
        srepname.setColumnName(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.srepname.columnName")); // NOI18N
        srepname.setDataSet(srep.getDataSet());
        jPanel1.add(srepname);

        mobile.setText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.mobile.text")); // NOI18N
        mobile.setColumnName(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.mobile.columnName")); // NOI18N
        mobile.setDataSet(srep.getDataSet());
        jPanel1.add(mobile);

        email.setText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.email.text")); // NOI18N
        email.setColumnName(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.email.columnName")); // NOI18N
        email.setDataSet(srep.getDataSet());
        jPanel1.add(email);

        phone.setText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.phone.text")); // NOI18N
        phone.setColumnName(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.phone.columnName")); // NOI18N
        phone.setDataSet(srep.getDataSet());
        jPanel1.add(phone);

        srepname1.setText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.srepname1.text")); // NOI18N
        srepname1.setColumnName(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.srepname1.columnName")); // NOI18N
        srepname1.setDataSet(srep.getDataSet());
        srepname1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srepname1ActionPerformed(evt);
            }
        });
        jPanel1.add(srepname1);

        addr.setColumns(20);
        addr.setRows(5);
        addr.setColumnName(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.addr.columnName")); // NOI18N
        addr.setDataSet(srep.getDataSet());
        jScrollPane1.setViewportView(addr);

        jPanel1.add(jScrollPane1);

        jLabel9.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 11)); // NOI18N
        jLabel9.setText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.jLabel9.text")); // NOI18N
        jPanel1.add(jLabel9);

        jdbCheckBox1.setText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.jdbCheckBox1.text")); // NOI18N
        jdbCheckBox1.setColumnName(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.jdbCheckBox1.columnName")); // NOI18N
        jdbCheckBox1.setDataSet(srep.getDataSet());
        jPanel1.add(jdbCheckBox1);

        jLabel1.setFont(new java.awt.Font("Bitstream Vera Sans", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText(org.openide.util.NbBundle.getMessage(FrmSalesman2.class, "FrmSalesman2.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBToolbar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jBToolbar1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(177, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBToolbar1ToolbarCancelPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {//GEN-FIRST:event_jBToolbar1ToolbarCancelPerformed
        doCancel();
    }//GEN-LAST:event_jBToolbar1ToolbarCancelPerformed

    private void jBToolbar1ToolbarDeletePerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {//GEN-FIRST:event_jBToolbar1ToolbarDeletePerformed
        doDelete();
    }//GEN-LAST:event_jBToolbar1ToolbarDeletePerformed

    private void jBToolbar1ToolbarEditPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {//GEN-FIRST:event_jBToolbar1ToolbarEditPerformed
        doEdit(srepid.getText());
    }//GEN-LAST:event_jBToolbar1ToolbarEditPerformed

    private void jBToolbar1ToolbarNewPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {//GEN-FIRST:event_jBToolbar1ToolbarNewPerformed
        doNew();
    }//GEN-LAST:event_jBToolbar1ToolbarNewPerformed

    private void jBToolbar1ToolbarOpenPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {//GEN-FIRST:event_jBToolbar1ToolbarOpenPerformed
        doOpen();
    }//GEN-LAST:event_jBToolbar1ToolbarOpenPerformed

    private void jBToolbar1ToolbarSavePerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {//GEN-FIRST:event_jBToolbar1ToolbarSavePerformed
        doSave();
    }//GEN-LAST:event_jBToolbar1ToolbarSavePerformed

    private void srepname1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srepname1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_srepname1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.borland.dbswing.JdbTextArea addr;
    private com.bits.lib.dbswing.JBdbTextField email;
    private com.bits.lib.dbswing.JBToolbar jBToolbar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.borland.dbswing.JdbCheckBox jdbCheckBox1;
    private com.bits.lib.dbswing.JBdbTextField mobile;
    private com.bits.lib.dbswing.JBdbTextField phone;
    private com.bits.bee.ui.myswing.BTextIDField srepid;
    private com.bits.lib.dbswing.JBdbTextField srepname;
    private com.bits.lib.dbswing.JBdbTextField srepname1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void doNew() {
        srep.getDataSet().emptyAllRows();
        srep.New();
        srep.setString("srepid", "AUTO");
        srep.setTransCode("SLS");
        state.setState(BdbState.stNEW);
    }

    @Override
    public void doOpen() {
        DlgSalesman dlg = DlgSalesman.getInstance();
        dlg.setVisible(true);
        if (dlg.getSelectedID() != null) {
            try {
                srep.LoadID(dlg.getSelectedID());
                state.setState(BdbState.stEDIT);
            } catch (Exception ex) {
                Exceptions.printStackTrace(ex);
            }
        }
    }

    @Override
    public void doEdit() {
        state.setState(BdbState.stEDIT);
    }

    @Override
    public void doEdit(String id) {
        if (id != null) {
            try {
                srep.LoadID(id);
                state.setState(BdbState.stEDIT);
            } catch (Exception ex) {
                Exceptions.printStackTrace(ex);
            }
        }
    }

    @Override
    public void doSave() {
        try {
//            DataSet.jCheckBox1.getText()
            srep.saveChanges();
            UIMgr.showMessageDialog("Data berhasil Disimpan");
            state.setState(BdbState.stNONE);
        } catch (Exception ex) {
            UIMgr.showErrorDialog("Error", ex);
        }
    }

    @Override
    public void doCancel() {
        state.setState(BdbState.stNONE);
    }

    @Override
    public void doDelete() {
        try {
            srep.getDataSet().deleteRow();
            srep.saveChanges();
            UIMgr.showMessageDialog("Data Berhasil dihapus");
            state.setState(BdbState.stNONE);
        } catch (Exception ex) {
            Exceptions.printStackTrace(ex);
        }
    }

    @Override
    public void doVoid() {        
    }

    @Override
    public void doPrint() {        
    }

    @Override
    public void doRefresh() {        
    }

    @Override
    public void setTransState(int state) {
        this.state.setState(state);
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
         if (evt.getPropertyName().equalsIgnoreCase("state")) {
            if (state.getState() == BdbState.stNEW || state.getState() == BdbState.stEDIT) {
                initPanel(true);
                jBToolbar1.setEnableEdit(false);
            } else {
                jBToolbar1.setEnableEdit(true);
                initPanel(false);
            }
        }
    }
}
