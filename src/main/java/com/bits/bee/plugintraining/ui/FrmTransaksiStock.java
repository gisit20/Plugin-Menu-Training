/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bits.bee.plugintraining.ui;

import com.bits.bee.bl.Reg;
import com.bits.bee.confui.ConfMgr;
import com.bits.bee.confui.FileInfo;
import com.bits.bee.plugintraining.bl.SAdjTransTraining;
import com.bits.bee.plugintraining.ui.dlg.DlgSAdjTraining;
import com.bits.bee.ui.DlgPrint;
import com.bits.bee.ui.UIMgr;
import com.bits.bee.ui.jasper.BJasperViewer;
import com.bits.bee.ui.myswing.InternalFrameTrans;
import com.bits.lib.BUtil;
import com.bits.lib.dbswing.BdbState;
import com.bits.lib.dx.BDM;
import com.bits.lib.dx.JBSQL;
import com.bits.lib.report.BTextReport;
import com.bits.lib.report.TextPrinting;
import com.bits.lib.security.BAuthMgr;
import com.borland.dx.dataset.DataSet;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.Connection;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import org.openide.util.Exceptions;

/**
 *
 * @author Sigit Sukarman
 */
public class FrmTransaksiStock extends InternalFrameTrans implements PropertyChangeListener {

    private SAdjTransTraining trans = new SAdjTransTraining();
    private String OBJID = "PG-TR-03";
    BdbState state = new BdbState();
    JasperPrint jasperPrint;
    JasperDesign jasperDesign;

    /**
     * Creates new form FrmTransaksiStock
     */
    public FrmTransaksiStock() {
        initComponents();
        initForm();
        initTable();
    }

    private void initForm() {
        jBToolbar1.setState(state);
        jBToolbar1.setObjid(OBJID);
        jBToolbar1.setAuthMgr(BAuthMgr.getDefault());

        state.addPropertyChangeListener("state", this);
        state.setState(BdbState.stNONE);
    }

    private void setEnabledPanel(boolean b) {
        BUtil.setEnabledPanel(jPanel1, b);
    }

    private void initTable() {
        DataSet ds = trans.getDataSetDetail();

//        SPikItem pikItem = new SPikItem();
        for (int i = 0; i < ds.getColumnCount(); i++) {
            ds.getColumn(i).setVisible(0);
        }

//        ds.getColumn("itemid").setVisible(1);
//        ds.getColumn("itemid").setItemEditor(new BCellEditor(pikItem));
//        
        UIMgr.setDataSetDetailTrans(ds);
        ds.getColumn("sadjdno").setCaption("No");
        ds.getColumn("sadjdno").setWidth(4);
        ds.getColumn("sadjdno").setVisible(1);

        ds.getColumn("prjid").setVisible(0);
        ds.getColumn("deptid").setVisible(0);
        ds.getColumn("pid").setVisible(0);
        ds.getColumn("subtotal").setVisible(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBToolbar1 = new com.bits.lib.dbswing.JBToolbar();
        jFormLabel1 = new com.bits.bee.ui.myswing.JFormLabel();
        jBStatusbar1 = new com.bits.lib.dbswing.JBStatusbar();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtSAdjno = new com.bits.bee.ui.myswing.BTextIDField();
        jBDatePicker1 = new com.bits.lib.dbswing.JBDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        jBdbTable1 = new com.bits.lib.dbswing.JBdbTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jdbTextArea1 = new com.borland.dbswing.JdbTextArea();
        pikPegawai1 = new com.bits.bee.plugintraining.ui.component.PikPegawai();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cboCabang1 = new com.bits.bee.plugintraining.ui.component.CboCabang();

        jBToolbar1.setEnableChoosePrintMode(true);
        jBToolbar1.setEnablePrint(false);
        jBToolbar1.setEnableRefresh(false);
        jBToolbar1.addJBToolbarListener(new com.bits.lib.dbswing.JBToolbarListener() {
            public void toolbarNewPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
                jBToolbar1ToolbarNewPerformed(evt);
            }
            public void toolbarOpenPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
                jBToolbar1ToolbarOpenPerformed(evt);
            }
            public void toolbarEditPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
                jBToolbar1ToolbarEditPerformed(evt);
            }
            public void toolbarSavePerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
                jBToolbar1ToolbarSavePerformed(evt);
            }
            public void toolbarCancelPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
                jBToolbar1ToolbarCancelPerformed(evt);
            }
            public void toolbarDeletePerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
                jBToolbar1ToolbarDeletePerformed(evt);
            }
            public void toolbarVoidPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
                jBToolbar1ToolbarVoidPerformed(evt);
            }
            public void toolbarPrintPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
                jBToolbar1ToolbarPrintPerformed(evt);
            }
            public void toolbarRefreshPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {
            }
        });

        jFormLabel1.setText(org.openide.util.NbBundle.getMessage(FrmTransaksiStock.class, "FrmTransaksiStock.jFormLabel1.text")); // NOI18N

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 11)); // NOI18N
        jLabel1.setText(org.openide.util.NbBundle.getMessage(FrmTransaksiStock.class, "FrmTransaksiStock.jLabel1.text")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 11)); // NOI18N
        jLabel2.setText(org.openide.util.NbBundle.getMessage(FrmTransaksiStock.class, "FrmTransaksiStock.jLabel2.text")); // NOI18N

        txtSAdjno.setText(org.openide.util.NbBundle.getMessage(FrmTransaksiStock.class, "FrmTransaksiStock.txtSAdjno.text")); // NOI18N
        txtSAdjno.setColumnName(org.openide.util.NbBundle.getMessage(FrmTransaksiStock.class, "FrmTransaksiStock.txtSAdjno.columnName")); // NOI18N
        txtSAdjno.setDataSet(trans.getDataSetMaster());

        jBDatePicker1.setColumnName(org.openide.util.NbBundle.getMessage(FrmTransaksiStock.class, "FrmTransaksiStock.jBDatePicker1.columnName")); // NOI18N
        jBDatePicker1.setDataSet(trans.getDataSetMaster());

        jBdbTable1.setDataSet(trans.getDataSetDetail());
        jScrollPane1.setViewportView(jBdbTable1);

        jLabel3.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 11)); // NOI18N
        jLabel3.setText(org.openide.util.NbBundle.getMessage(FrmTransaksiStock.class, "FrmTransaksiStock.jLabel3.text")); // NOI18N

        jdbTextArea1.setColumns(20);
        jdbTextArea1.setRows(5);
        jdbTextArea1.setColumnName(org.openide.util.NbBundle.getMessage(FrmTransaksiStock.class, "FrmTransaksiStock.jdbTextArea1.columnName")); // NOI18N
        jdbTextArea1.setDataSet(trans.getDataSetMaster());
        jScrollPane2.setViewportView(jdbTextArea1);

        pikPegawai1.setToolTipText(org.openide.util.NbBundle.getMessage(FrmTransaksiStock.class, "FrmTransaksiStock.pikPegawai1.toolTipText")); // NOI18N
        pikPegawai1.setColumnName(org.openide.util.NbBundle.getMessage(FrmTransaksiStock.class, "FrmTransaksiStock.pikPegawai1.columnName")); // NOI18N
        pikPegawai1.setDataSet(trans.getDataSetMaster());

        jLabel4.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 11)); // NOI18N
        jLabel4.setText(org.openide.util.NbBundle.getMessage(FrmTransaksiStock.class, "FrmTransaksiStock.jLabel4.text")); // NOI18N

        jLabel5.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 11)); // NOI18N
        jLabel5.setText(org.openide.util.NbBundle.getMessage(FrmTransaksiStock.class, "FrmTransaksiStock.jLabel5.text")); // NOI18N

        cboCabang1.setColumnName(org.openide.util.NbBundle.getMessage(FrmTransaksiStock.class, "FrmTransaksiStock.cboCabang1.columnName")); // NOI18N
        cboCabang1.setDataSet(trans.getDataSetMaster());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jBDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtSAdjno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(pikPegawai1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cboCabang1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(14, 14, 14)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtSAdjno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(pikPegawai1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(cboCabang1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jBToolbar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jFormLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jBStatusbar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jBToolbar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFormLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBStatusbar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBToolbar1ToolbarCancelPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {//GEN-FIRST:event_jBToolbar1ToolbarCancelPerformed
        doCancel();
    }//GEN-LAST:event_jBToolbar1ToolbarCancelPerformed

    private void jBToolbar1ToolbarDeletePerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {//GEN-FIRST:event_jBToolbar1ToolbarDeletePerformed
        doDelete();
    }//GEN-LAST:event_jBToolbar1ToolbarDeletePerformed

    private void jBToolbar1ToolbarEditPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {//GEN-FIRST:event_jBToolbar1ToolbarEditPerformed
        doEdit();
    }//GEN-LAST:event_jBToolbar1ToolbarEditPerformed

    private void jBToolbar1ToolbarNewPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {//GEN-FIRST:event_jBToolbar1ToolbarNewPerformed
        doNew();
    }//GEN-LAST:event_jBToolbar1ToolbarNewPerformed

    private void jBToolbar1ToolbarOpenPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {//GEN-FIRST:event_jBToolbar1ToolbarOpenPerformed
        doOpen();
    }//GEN-LAST:event_jBToolbar1ToolbarOpenPerformed

    private void jBToolbar1ToolbarVoidPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {//GEN-FIRST:event_jBToolbar1ToolbarVoidPerformed
        doVoid();
    }//GEN-LAST:event_jBToolbar1ToolbarVoidPerformed

    private void jBToolbar1ToolbarSavePerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {//GEN-FIRST:event_jBToolbar1ToolbarSavePerformed
        doSave();
    }//GEN-LAST:event_jBToolbar1ToolbarSavePerformed

    private void jBToolbar1ToolbarPrintPerformed(com.bits.lib.dbswing.JBToolbarEvent evt) {//GEN-FIRST:event_jBToolbar1ToolbarPrintPerformed
        doPrint();
    }//GEN-LAST:event_jBToolbar1ToolbarPrintPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.bits.bee.plugintraining.ui.component.CboCabang cboCabang1;
    private com.bits.lib.dbswing.JBDatePicker jBDatePicker1;
    private com.bits.lib.dbswing.JBStatusbar jBStatusbar1;
    private com.bits.lib.dbswing.JBToolbar jBToolbar1;
    private com.bits.lib.dbswing.JBdbTable jBdbTable1;
    private com.bits.bee.ui.myswing.JFormLabel jFormLabel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.borland.dbswing.JdbTextArea jdbTextArea1;
    private com.bits.bee.plugintraining.ui.component.PikPegawai pikPegawai1;
    private com.bits.bee.ui.myswing.BTextIDField txtSAdjno;
    // End of variables declaration//GEN-END:variables

    @Override
    public void doNew() {
        trans.emptyAllRows();
        trans.New();
        state.setState(BdbState.stNEW);
    }

    @Override
    public void doOpen() {
        DlgSAdjTraining dlg = DlgSAdjTraining.getInstance();
        dlg.setVisible(true);
        String id = dlg.getSelectedID();
        if (id != null) {
            try {
                trans.LoadID(id);
                state.setState(BdbState.stEDIT);
            } catch (Exception ex) {
                Exceptions.printStackTrace(ex);
            }
        }

    }

    @Override
    public void doEdit() {
        try {
            trans.LoadID(txtSAdjno.getText());
            state.setState(BdbState.stEDIT);
        } catch (Exception ex) {
            Exceptions.printStackTrace(ex);
        }

    }

    @Override
    public void doEdit(String string) {
        state.setState(BdbState.stEDIT);
    }

    @Override
    public void doSave() {
        try {
            trans.Save();
            UIMgr.showMessageDialog("Data berhasil disimpan!");
            state.setState(BdbState.stNONE);
        } catch (Exception ex) {
            UIMgr.showErrorDialog("Gagal simpan data", ex);
            Exceptions.printStackTrace(ex);
        }
    }

    @Override
    public void doCancel() {
        trans.Cancel();
        state.setState(BdbState.stNONE);
    }

    @Override
    public void doDelete() {
        state.setState(BdbState.stNONE);
    }

    @Override
    public void doVoid() {
        try {
            trans.Void();
            UIMgr.showMessageDialog("Data berhasil divoid");
            trans.emptyAllRows();
            state.setState(BdbState.stNONE);
        } catch (Exception ex) {
            UIMgr.showErrorDialog("Gagal void data", ex);
            ex.printStackTrace();
        }
    }

    @Override
    public void doPrint() {
        if (jBToolbar1.getPrintMode() == jBToolbar1.PRINTMODE_GRAPHICS) {
            printJasperInvoice();
        } else {
            showDialogPrint();
//            printTextInvoice(true);
        }

    }

    //memberi dialog preview atau print langsung
    private void showDialogPrint() {
        DlgPrint dlgPrint = DlgPrint.getInstance();
        dlgPrint.setDefault();
        dlgPrint.setTextInvoice("Invoice Transaksi Stock");
        dlgPrint.setTextRekapInvoice("Rekap Transaksi Stock");
        dlgPrint.enabledInvPerf(false);
        dlgPrint.setVisible(true);
        if (dlgPrint.getDoPrint()) {
            printTextInvoice(dlgPrint.getPrv());
        }
    }

    private void printTextInvoice(boolean preview) {
        trans.initPrint();
        //memberi dialog preview atau print langsung

        //Preg untuk mengarahakn laporan diarahkan ke laporan yang mana
        BTextReport btextreport_m = new BTextReport(BDM.getDefault(), "STOCKTR_RPT", "STOCK", trans.getDataSetMaster());
        BTextReport btextreport_d = new BTextReport(BDM.getDefault(), "STOCKDTR_RPT", "STOCKD", trans.getDataSetDetail());

        btextreport_m.addSubReport(btextreport_d);
        btextreport_m.process();

        if (preview) {
            btextreport_m.Preview(); //untuk preview print
        } else if (Reg.getInstance().getValueBoolean("PRNTDLG_ENABLED").booleanValue()) {
            btextreport_m.Print();
        } else {
            TextPrinting p = new TextPrinting(btextreport_m.getTextString());
            if (Boolean.valueOf(ConfMgr.getConfig().getValByTag("autoprint")).booleanValue()) {
                p.setPrint(ConfMgr.getConfig().getValByTag("text1"));
                p.setshowPrintDialog(false);
            }
            p.print();

        }
    }

    private void printJasperInvoice() {
        try {
            System.setProperty("javax.xml.parsers.SAXParserFactory", "org.apache.xerces.jaxp.SAXParserFactoryImpl");

            StringBuffer sql = new StringBuffer();
            JRDesignQuery jrQuery = new JRDesignQuery();

            sql.append("SELECT m.sadjno, sadjdate, m.empid, empname, sadjnote, sadjdno, d.itemid, itemdesc, qty, unit, "
                    + "wh.whid, whname "
                    + "FROM sadj m  "
                    + "JOIN sadjd d ON d.sadjno=m.sadjno "
                    + "JOIN wh ON wh.whid=d.whid "
                    + "JOIN item i ON i.itemid=d.itemid "
                    + "LEFT JOIN emp ON emp.empid=m.empid "
                    + "WHERE m.sadjno='" + trans.getDataSetMaster().getString("sadjno") + "'");
            JBSQL.setORDERBY(sql, "m.sadjno, sadjdno");

            jrQuery.setText(sql.toString());

            jasperDesign = JRXmlLoader.load(FileInfo.getInstance().createReportPath(null, null, "InvoiceStock.jrxml"));
//             jasperDesign = JRXmlLoader.load("C:C:\\Program Files (x86)\\BeeAccounting\\2.7\\report");
            jasperDesign.setQuery(jrQuery);

            JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);

            //buat koneksi
            Connection conn = BDM.getDefault().getDatabase().getJdbcConnection();
            jasperPrint = JasperFillManager.fillReport(jasperReport, null, conn);

            BJasperViewer.viewReport(jasperPrint, false);

        } catch (JRException ex) {
            Exceptions.printStackTrace(ex);
        }
    }

    @Override
    public void doRefresh() {
    }

    @Override
    public void setTransState(int state) {
//        this.state.setState(state);
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getPropertyName().equalsIgnoreCase("state")) {
            if (state.getState() == BdbState.stNEW || state.getState() == BdbState.stEDIT) {
                setEnabledPanel(true);
                if (state.getState() == BdbState.stEDIT) {
                    jBToolbar1.setEnablePrint(true);
                } else {
                    jBToolbar1.setEnablePrint(false);
                }
            } else {
                setEnabledPanel(false);
                if (txtSAdjno.getText().length() > 0) {
                    jBToolbar1.setEnablePrint(true);
                } else {
                    jBToolbar1.setEnablePrint(false);
                }
            }
            jBToolbar1.setEnableDelete(false);
        }
    }
}
